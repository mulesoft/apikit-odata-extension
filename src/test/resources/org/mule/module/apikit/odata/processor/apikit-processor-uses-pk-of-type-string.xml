<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">
	<http:listener-config name="api-pk-of-type-string-httpListenerConfig">
		<http:listener-connection host="0.0.0.0" port="${serverPort}" />
	</http:listener-config>
	<apikit:config name="api-pk-of-type-string-config" api="org/mule/module/apikit/odata/api-pk-of-type-string.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
	<flow name="api-pk-of-type-string-main">
		<http:listener config-ref="api-pk-of-type-string-httpListenerConfig" path="/api/*">
			<http:response statusCode="#[vars.httpStatus default 200]">
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:response>
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body>#[payload]</http:body>
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:error-response>
		</http:listener>
		<apikit:router config-ref="api-pk-of-type-string-config" />
		<error-handler>
			<on-error-propagate type="APIKIT:BAD_REQUEST">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" />
				<set-variable variableName="httpStatus" value="400" />
			</on-error-propagate>
			<on-error-propagate type="APIKIT:NOT_FOUND">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" />
				<set-variable variableName="httpStatus" value="404" />
			</on-error-propagate>
			<on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" />
				<set-variable variableName="httpStatus" value="405" />
			</on-error-propagate>
			<on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" />
				<set-variable variableName="httpStatus" value="406" />
			</on-error-propagate>
			<on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" />
				<set-variable variableName="httpStatus" value="415" />
			</on-error-propagate>
			<on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Not Implemented&quot; }" />
				<set-variable variableName="httpStatus" value="501" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="api-pk-of-type-string-console">
		<http:listener config-ref="api-pk-of-type-string-httpListenerConfig" path="/console/*">
			<http:response statusCode="#[vars.httpStatus default 200]">
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:response>
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body>#[payload]</http:body>
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:error-response>
		</http:listener>
		<apikit:console config-ref="api-pk-of-type-string-config" />
		<error-handler>
			<on-error-propagate type="APIKIT:NOT_FOUND">
				<set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]" />
				<set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" />
				<set-variable variableName="httpStatus" value="404" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="put:\customers\(id):application\json:api-pk-of-type-string-config">
		<set-variable value="#[attributes.uriParams.id]" variableName="id" />
		<logger level="INFO" message="put:\customers\(id):application\json:api-pk-of-type-string-config" />
	</flow>
	<flow name="put:\orders\(id):application\json:api-pk-of-type-string-config">
		<set-variable value="#[attributes.uriParams.id]" variableName="id" />
		<logger level="INFO" message="put:\orders\(id):application\json:api-pk-of-type-string-config" />
	</flow>
	<flow name="delete:\customers\(id):api-pk-of-type-string-config">
		<set-variable value="#[attributes.uriParams.id]" variableName="id" />
		<logger level="INFO" message="delete:\customers\(id):api-pk-of-type-string-config" />
	</flow>
	<flow name="delete:\orders\(id):api-pk-of-type-string-config">
		<set-variable value="#[attributes.uriParams.id]" variableName="id" />
		<logger level="INFO" message="delete:\orders\(id):api-pk-of-type-string-config" />
	</flow>
	<flow name="get:\customers\(id):api-pk-of-type-string-config">
		<set-variable value="#[attributes.uriParams.id]" variableName="id" />
		<logger level="INFO" message="get:\customers\(id):api-pk-of-type-string-config" />
	</flow>
	<flow name="get:\customers:api-pk-of-type-string-config">
		<logger level="INFO" message="get:\customers:api-pk-of-type-string-config" />
	</flow>
	<flow name="get:\orders\(id):api-pk-of-type-string-config">
		<set-variable value="#[attributes.uriParams.id]" variableName="id" />
		<java:invoke-static class="org.mule.module.apikit.processor.SamplesToPayloadTransformer"
							method="getJson(String)">
			<java:args><![CDATA[#[%dw 2.0
output application/java
---
{
	arg0: attributes.requestPath
}]]]></java:args>
		</java:invoke-static>    </flow>
	<flow name="get:\orders:api-pk-of-type-string-config">
		<java:invoke-static class="org.mule.module.apikit.processor.SamplesToPayloadTransformer"
							method="getJson(String)">
			<java:args><![CDATA[#[%dw 2.0
output application/java
---
{
	arg0: attributes.requestPath
}]]]></java:args>
		</java:invoke-static>
	</flow>
	<flow name="post:\customers:api-pk-of-type-string-config">
		<logger level="INFO" message="post:\customers:api-pk-of-type-string-config" />
	</flow>
	<flow name="post:\orders:api-pk-of-type-string-config">
		<java:invoke-static class="org.mule.module.apikit.processor.SamplesToPayloadTransformer"
							method="getJson(String)">
			<java:args><![CDATA[#[%dw 2.0
output application/java
---
{
	arg0: attributes.requestPath
}]]]></java:args>
		</java:invoke-static>    </flow>
</mule>
