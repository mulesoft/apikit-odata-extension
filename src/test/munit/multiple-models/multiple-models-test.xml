<?xml version="1.0" encoding="UTF-8"?>

<mule
  xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
  xmlns="http://www.mulesoft.org/schema/mule/core"
  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

  <munit:config name="odata-multiple-model-test-suite"/>

  <munit:test name="multiple-model-test">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="metadata-server-main"/>
      <munit:enable-flow-source value="multiple-models-server-main"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="GET" config-ref="http-requester-simple" path="/api/odata.svc/$metadata">
        <http:headers>#[output application/java --- {"Accept" : "application/xml"}]</http:headers>
      </http:request>
      <set-variable value="#[output application/java --- attributes.headers.'Content-type']" variableName="firstModelContentType"/>
      <set-variable value="#[output application/java --- attributes.statusCode]" variableName="firstModelStatusCode"/>
      <set-variable value="#[output application/java --- payload.Edmx.DataServices.Schema.EntityType.@Name]" variableName="firstModelEntityName"/>
      <http:request method="GET" config-ref="second-http-requester-simple" path="/api/odata.svc/$metadata">
        <http:headers>#[output application/java --- {"Accept" : "application/xml"}]</http:headers>
      </http:request>
      <set-variable value="#[output application/java --- attributes.headers.'Content-type']" variableName="secondModelContentType"/>
      <set-variable value="#[output application/java --- attributes.statusCode]" variableName="secondModelStatusCode"/>
      <set-variable value="#[output application/java --- payload.Edmx.DataServices.Schema.EntityType.@Name]" variableName="secondModelEntityName"/>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[output application/java --- vars.firstModelContentType]" is="#[MunitTools::equalTo('application/xml')]"/>
      <munit-tools:assert-that expression="#[output application/java --- vars.firstModelStatusCode]" is="#[MunitTools::equalTo(200)]"/>
      <munit-tools:assert-that expression="#[output application/java --- vars.firstModelEntityName]" is="#[MunitTools::equalTo('orders')]"/>
      <munit-tools:assert-that expression="#[output application/java --- vars.secondModelContentType]" is="#[MunitTools::equalTo('application/xml')]"/>
      <munit-tools:assert-that expression="#[output application/java --- vars.secondModelStatusCode]" is="#[MunitTools::equalTo(200)]"/>
      <munit-tools:assert-that expression="#[output application/java --- vars.secondModelEntityName]" is="#[MunitTools::equalTo('tickets')]"/>
    </munit:validation>
  </munit:test>


</mule>